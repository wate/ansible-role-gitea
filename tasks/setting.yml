---
- name: Generate INTERNAL_TOKEN token
  ansible.builtin.import_tasks: setting/tokens/internal_token.yml
  when: not gitea_internal_token
- name: Add/update generated token file
  ansible.builtin.template:
    src: token.j2
    dest: "{{ gitea_work_dir }}/internal_token"
    mode: "0644"
  vars:
    token_value: "{{ gitea_internal_token }}"
- name: Generate LFS_JWT_SECRET token
  ansible.builtin.import_tasks: setting/tokens/lfs_jwt_secret.yml
  when: not gitea_lfs_jwt_secret
- name: Add/update generated token file
  ansible.builtin.template:
    src: token.j2
    dest: "{{ gitea_work_dir }}/lfs_jwt_secret"
    mode: "0644"
  vars:
    token_value: "{{ gitea_lfs_jwt_secret }}"
- name: Generate SECRET_KEY token
  ansible.builtin.import_tasks: setting/tokens/secret_key.yml
  when: not gitea_secret_key
- name: Add/update generated token file
  ansible.builtin.template:
    src: token.j2
    dest: "{{ gitea_work_dir }}/secret_key"
    mode: "0644"
  vars:
    token_value: "{{ gitea_secret_key }}"
- name: Set token config variable
  ansible.builtin.set_fact:
    token_config:
      server:
        LFS_JWT_SECRET: "{{ gitea_lfs_jwt_secret }}"
      security:
        INTERNAL_TOKEN: "{{ gitea_internal_token }}"
        SECRET_KEY: "{{ gitea_secret_key }}"
- name: Merge config variable
  ansible.builtin.set_fact:
    gitea_cfg: "{{ gitea_cfg | combine(token_config, recursive=True) }}"
- name: Add/update setting file
  ansible.builtin.blockinfile:
    dest: "{{ gitea_config_dir }}/app.ini"
    owner: root
    group: "{{ gitea_user }}"
    mode: "0660"
    create: true
    marker: ;; {mark} ANSIBLE MANAGED BLOCK
    block: |
      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      ;; General Settings
      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      APP_NAME = {{ gitea_app_name }}
      RUN_USER = {{ gitea_user }}
      RUN_MODE = {{ gitea_mode }}
      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      {% for section_name, section_config in gitea_cfg.items() %}
      ;;;;;;;
      [{{ section_name }}]
      {% for option_name, option_value in section_config.items() %}
      {% if option_value is boolean -%}
      {% set option_value = option_value | ternary('true', 'false') %}
      {% endif %}
      {{ option_name }} = {{ option_value }}
      {% endfor %}
      {% endfor %}
  notify: restart gitea
- name: check fail2ban config directory
  ansible.builtin.stat:
    path: /etc/fail2ban
  register: fail2ban_config_dir_result
- name: Add fail2ban setting
  when: fail2ban_config_dir_result.stat.exists
  block:
    - name: Add filter file
      ansible.builtin.copy:
        src: fail2ban/filter/gitea.conf
        dest: /etc/fail2ban/filter.d/gitea.conf
        mode: "0644"
    - name: Add jail file
      ansible.builtin.copy:
        src: fail2ban/jail/gitea.conf
        dest: /etc/fail2ban/jail.d/gitea.conf
        mode: "0644"
