---
gitea_version: latest

## ----------------
## Giteaのアプリケーション名
## ----------------
gitea_app_name: "Gitea (Git with a cup of tea)"
## ----------------
## Giteaの動作モード
## 設定値: dev / prod / test
## ----------------
gitea_mode: prod

gitea_port: 3001

## ----------------
## Giteaの「INTERNAL_TOKEN」の設定値
## ※未指定の場合はトークンが自動生成されます
## ----------------
gitea_internal_token:
## ----------------
## Giteaの「LFS_JWT_SECRET」の設定
## ※未指定の場合はトークンが自動生成されます
## ----------------
gitea_lfs_jwt_secret:
## ----------------
## Giteaの「SECRET_KEY」の設定
## ※未指定の場合はトークンが自動生成されます
## ----------------
gitea_secret_key:

## ----------------
## Giteaの設定
##
## その他の設定については以下を参照
## https://docs.gitea.io/en-us/config-cheat-sheet/
## サンプルについては以下を参照
## https://github.com/go-gitea/gitea/blob/main/custom/conf/app.example.ini
## ----------------
gitea_cfg:
  database:
    # 設定値: mysql / postgres / sqlite3 / mssql
    DB_TYPE: mysql
    HOST: 127.0.0.1:3306
    NAME: gitea
    USER: gitea
    PASSWD: ""
    # MySQL Database only
    CHARSET: utf8mb4
    # SQLite only
    PATH: "{{ gitea_work_dir }}/data/gitea.db"
    # PostgreSQL Database only
    SSL_MODE: false
    SCHEMA: ""
    LOG_SQL: false
  server:
    HTTP_PORT: "{{ gitea_port }}"
    LOCAL_ROOT_URL: http://localhost:{{ gitea_port }}/
    SSH_DOMAIN: gitea.example.com
    DOMAIN: gitea.example.com
    ROOT_URL: http://gitea.example.com/
    DISABLE_SSH: false
    SSH_PORT: 22
    LFS_START_SERVER: true
    # ローカルモードを有効にする
    OFFLINE_MODE: false
  mailer:
    ENABLED: false
    # SEND_BUFFER_LEN: 100
    # # 設定値: smtp / smtps / smtp+starttls / smtp+unix / sendmail / dummy
    # PROTOCOL:
    # # SMTPホスト
    # SMTP_ADDR:
    # SMTP_PORT:
    # ENABLE_HELO: true
    # HELO_HOSTNAME:
    # FORCE_TRUST_SERVER_CERT: false
    # USE_CLIENT_CERT: false
    # CLIENT_CERT_FILE: custom/mailer/cert.pem
    # CLIENT_KEY_FILE: custom/mailer/key.pem
    # # メール送信者
    # FROM:
    # ENVELOPE_FROM:
    # # SMTPユーザー名
    # USER:
    # # SMTPパスワード
    # PASSWD:
    # SEND_AS_PLAIN_TEXT: false
    # SENDMAIL_PATH: sendmail
    # SENDMAIL_ARGS:
    # SENDMAIL_TIMEOUT: 5m
    # SENDMAIL_CONVERT_CRLF: true
  repository:
    ROOT: "{{ gitea_work_dir }}/data/gitea-repositories"
  # cache:
  #   ENABLED: true
  #   # 設定値: memory / redis / memcache / twoqueue
  #   ADAPTER: memory
  #   INTERVAL: 60
  #   # For "redis" and "memcache"
  #   # redis: network=tcp,addr=:6379,password=macaron,db=0,pool_size=100,idle_timeout=180
  #   # memcache: `127.0.0.1:11211`
  #   # twoqueue: `{"size":50000,"recent_ratio":0.25,"ghost_ratio":0.5}` or `50000`
  #   HOST:
  #   ITEM_TTL: 16h
  service:
    # 登録にはメールによる確認が必要
    REGISTER_EMAIL_CONFIRM: false
    # メール通知を有効にする
    ENABLE_NOTIFY_MAIL: false
    # セルフ登録を無効にする
    DISABLE_REGISTRATION: false
    # 外部サービスを使用した登録のみを許可
    ALLOW_ONLY_EXTERNAL_REGISTRATION: false
    # 登録時のCAPTCHAを有効にする
    ENABLE_CAPTCHA: false
    # ページ閲覧にサインインが必要
    REQUIRE_SIGNIN_VIEW: false
    # デフォルトでメールアドレスを隠す
    DEFAULT_KEEP_EMAIL_PRIVATE: false
    # デフォルトで組織の作成を許可
    DEFAULT_ALLOW_CREATE_ORGANIZATION: true
    # デフォルトでタイムトラッキング有効
    DEFAULT_ENABLE_TIMETRACKING: true
    # メールを隠すときのドメイン
    NO_REPLY_ADDRESS:
  picture:
    # Gravatarを無効にする
    DISABLE_GRAVATAR: false
    # フェデレーテッド・アバターを有効にする
    ENABLE_FEDERATED_AVATAR: true
  openid:
    # OpenIDを使ったサインインを有効にする
    ENABLE_OPENID_SIGNIN: true
    # OpenIDを使ったセルフ登録を有効にする
    ENABLE_OPENID_SIGNUP: true
  session:
    PROVIDER: file
  log:
    MODE: console
    LEVEL: info
    ROOT_PATH: "{{ gitea_work_dir }}/log"
    ROUTER: console
  lfs:
    PATH: "{{ gitea_work_dir }}/data/lfs"
  repository.pull-request:
    DEFAULT_MERGE_STYLE: merge
  repository.signing:
    DEFAULT_TRUST_MODEL: committer
  security:
    INSTALL_LOCK: false
    # パスワードハッシュアルゴリズム
    PASSWORD_HASH_ALGO: pbkdf2

## ----------------
## Giteaのサービス設定
##
## ※設定のサンプルについては以下を参照
## https://github.com/go-gitea/gitea/blob/main/contrib/systemd/gitea.service
## ----------------
gitea_service_extra_cfg: |
  # Uncomment the next line if you have repos with lots of files and get a HTTP 500 error because of that
  # LimitNOFILE=524288:524288
  # If using Unix socket: tells systemd to create the /run/gitea folder, which will contain the gitea.sock file
  # (manually creating /run/gitea doesn't work, because it would not persist across reboots)
  # RuntimeDirectory=gitea
  # If you install Git to directory prefix other than default PATH (which happens
  # for example if you install other versions of Git side-to-side with
  # distribution version), uncomment below line and add that prefix to PATH
  # Don't forget to place git-lfs binary on the PATH below if you want to enable
  # Git LFS support
  #Environment=PATH=/path/to/git/bin:/bin:/sbin:/usr/bin:/usr/sbin
  # If you want to bind Gitea to a port below 1024, uncomment
  # the two values below, or use socket activation to pass Gitea its ports as above
  ###
  #CapabilityBoundingSet=CAP_NET_BIND_SERVICE
  #AmbientCapabilities=CAP_NET_BIND_SERVICE
  ###
  # In some cases, when using CapabilityBoundingSet and AmbientCapabilities option, you may want to
  # set the following value to false to allow capabilities to be applied on gitea process. The following
  # value if set to true sandboxes gitea service and prevent any processes from running with privileges
  # in the host user namespace.
  ###
  #PrivateUsers=false
  ###
